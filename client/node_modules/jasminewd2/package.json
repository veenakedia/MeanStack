{
  "_args": [
    [
      {
        "raw": "jasminewd2@0.0.9",
        "scope": null,
        "escapedName": "jasminewd2",
        "name": "jasminewd2",
        "rawSpec": "0.0.9",
        "spec": "0.0.9",
        "type": "version"
      },
      "C:\\Users\\vkedia\\Project\\meantodos\\client\\node_modules\\protractor"
    ]
  ],
  "_from": "jasminewd2@0.0.9",
  "_id": "jasminewd2@0.0.9",
  "_inCache": true,
  "_location": "/jasminewd2",
  "_nodeVersion": "5.5.0",
  "_npmOperationalInternal": {
    "host": "packages-16-east.internal.npmjs.com",
    "tmp": "tmp/jasminewd2-0.0.9.tgz_1461554339385_0.21687193401157856"
  },
  "_npmUser": {
    "name": "angularcore",
    "email": "angular-core+npm@google.com"
  },
  "_npmVersion": "3.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "jasminewd2@0.0.9",
    "scope": null,
    "escapedName": "jasminewd2",
    "name": "jasminewd2",
    "rawSpec": "0.0.9",
    "spec": "0.0.9",
    "type": "version"
  },
  "_requiredBy": [
    "/protractor"
  ],
  "_resolved": "https://registry.npmjs.org/jasminewd2/-/jasminewd2-0.0.9.tgz",
  "_shasum": "d6be40841d440dbe1ceee5a078de62683b0e56a7",
  "_shrinkwrap": null,
  "_spec": "jasminewd2@0.0.9",
  "_where": "C:\\Users\\vkedia\\Project\\meantodos\\client\\node_modules\\protractor",
  "author": {
    "name": "Julie Ralph",
    "email": "ju.ralph@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/angular/jasminewd/issues"
  },
  "dependencies": {},
  "description": "WebDriverJS adapter for Jasmine2.",
  "devDependencies": {
    "jasmine": "2.4.1",
    "jshint": "2.5.0",
    "selenium-webdriver": "2.52.0"
  },
  "directories": {},
  "dist": {
    "shasum": "d6be40841d440dbe1ceee5a078de62683b0e56a7",
    "tarball": "https://registry.npmjs.org/jasminewd2/-/jasminewd2-0.0.9.tgz"
  },
  "gitHead": "b0577ddd7ea2538ab3ac10022d29bbc117c84e18",
  "homepage": "https://github.com/angular/jasminewd",
  "keywords": [
    "test",
    "testing",
    "webdriver",
    "webdriverjs",
    "selenium",
    "jasmine"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "hankduan",
      "email": "duan.hank@gmail.com"
    },
    {
      "name": "angularcore",
      "email": "angular-core+npm@google.com"
    },
    {
      "name": "petebd",
      "email": "pete@bacondarwin.com"
    }
  ],
  "name": "jasminewd2",
  "optionalDependencies": {},
  "readme": "jasminewd [![Build Status](https://travis-ci.org/angular/jasminewd.png?branch=master)](https://travis-ci.org/angular/jasminewd)\n=========\n\nAdapter for Jasmine-to-WebDriverJS. Used by [Protractor](http://www.github.com/angular/protractor).\n\n**Important:** There are two active branches of jasminewd.\n\n - [master](https://github.com/angular/jasminewd/tree/master) is an adapter for Jasmine 1.3, and uses the package minijasminenode. It is published to npm as `jasminewd`.\n - [jasminewd2](https://github.com/angular/jasminewd/tree/jasminewd2) is an adapter for Jasmine 2.x, and uses the package jasmine. It is published to npm as `jasminewd2`.\n\nFeatures\n--------\n\n - Automatically makes tests asynchronously wait until the WebDriverJS control flow is empty.\n\n - If a `done` function is passed to the test, waits for both the control flow and until done is called.\n\n - Enhances `expect` so that it automatically unwraps promises before performing the assertion.\n\nInstallation\n------------\n```\nnpm install jasminewd2\n```\n\nUsage\n-----\n\nAssumes selenium-webdriver as a peer dependency.\n\n```js\n// In your setup.\nvar JasmineRunner = require('jasmine');\nvar jrunner = new JasmineRunner();\nrequire('jasminewd2');\n\nglobal.driver = new webdriver.Builder().\n    usingServer('http://localhost:4444/wd/hub').\n    withCapabilities({browserName: 'chrome'}).\n    build();\n\njrunner.projectBaseDir = '';\njrunner.execute(['**/*_spec.js']);\n\n// In your tests\n\ndescribe('tests with webdriver', function() {\n  it('will wait until webdriver is done', function() {\n    // This will be an asynchronous test. It will finish once webdriver has\n    // loaded the page, found the element, and gotten its text.\n    driver.get('http://www.example.com');\n\n    var myElement = driver.findElement(webdriver.By.id('hello'));\n\n    // Here, expect understands that myElement.getText() is a promise,\n    // and resolves it before asserting.\n    expect(myElement.getText()).toEqual('hello world');\n  });\n})\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/angular/jasminewd.git"
  },
  "scripts": {
    "pretest": "jshint index.js spec",
    "test": "scripts/test.sh"
  },
  "version": "0.0.9"
}
